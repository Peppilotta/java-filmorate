drop table if exists Film_genres;
drop table if exists Film_MPAs;
drop table if exists Friends;
drop table if exists Likes;
drop table if exists users;
drop table if exists Films;
drop table if exists mpa;
drop table if exists genre;


CREATE TABLE IF NOT EXISTS Users
(
    user_id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    login     varchar(255) NOT NULL,
    user_name varchar(255),
    email     varchar(255) NOT NULL,
    birthday  TIMESTAMP
);

CREATE TABLE IF NOT EXISTS Films
(
    film_id      INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_name    varchar(255) NOT NULL,
    release_date TIMESTAMP,
    description  varchar(200) NOT NULL,
    duration     integer CHECK (duration > 0),
    rate         integer CHECK (duration >= 0)
);

CREATE TABLE IF NOT EXISTS Genre
(
    genre_id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre_name varchar(20)
);
CREATE TABLE IF NOT EXISTS MPA
(
    MPA_id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    MPA_name varchar(20)
);


CREATE TABLE IF NOT EXISTS Likes
(
    like_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_id INTEGER REFERENCES Films (film_id) ON delete CASCADE,
    user_id INTEGER REFERENCES Users (user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Friends
(
    friendship_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id       INTEGER NOT NULL REFERENCES Users (user_id) ON DELETE CASCADE,
    friend_id     INTEGER NOT NULL,
    approval   boolean
);

CREATE TABLE IF NOT EXISTS Film_genres
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_id INTEGER REFERENCES Films (film_id) ON DELETE CASCADE,
    genre_id INTEGER REFERENCES Genre (genre_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Film_MPAs
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_id INTEGER REFERENCES Films (film_id) ON DELETE CASCADE,
    MPA_id INTEGER REFERENCES MPA (MPA_id) ON DELETE CASCADE
);